{"remainingRequest":"E:\\项目源码\\微服务\\springboot+vue校园宿舍管理系统\\前端\\dms\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目源码\\微服务\\springboot+vue校园宿舍管理系统\\前端\\dms\\src\\views\\manage\\building\\index.vue?vue&type=style&index=0&id=c2d8ad12&scoped=true&lang=css&","dependencies":[{"path":"E:\\项目源码\\微服务\\springboot+vue校园宿舍管理系统\\前端\\dms\\src\\views\\manage\\building\\index.vue","mtime":1644741256000},{"path":"E:\\项目源码\\微服务\\springboot+vue校园宿舍管理系统\\前端\\dms\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目源码\\微服务\\springboot+vue校园宿舍管理系统\\前端\\dms\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1655715156000},{"path":"E:\\项目源码\\微服务\\springboot+vue校园宿舍管理系统\\前端\\dms\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\项目源码\\微服务\\springboot+vue校园宿舍管理系统\\前端\\dms\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\项目源码\\微服务\\springboot+vue校园宿舍管理系统\\前端\\dms\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudGFibGUgew0KICBwYWRkaW5nOiAxMHB4Ow0KfQ0KDQoucm91dGVyLWNvbnRhaW5lciB7DQogIGhlaWdodDogMTAwJTsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA6KA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/manage/building","sourcesContent":["<template>\r\n  <div class=\"router-container\">\r\n    <div class=\"container\">\r\n      <div class=\"inner_container\">\r\n        <div class=\"table\">\r\n          <el-form size=\"mini\">\r\n            <el-form-item>\r\n              <el-button v-has-permi=\"['manage:building:save']\" @click=\"showDialog(undefined)\" size=\"mini\" type=\"primary\">\r\n                新增\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n\r\n          <el-table :expand-row-keys=\"defaultExpand\" :data=\"list\" v-loading=\"loading\" :tree-props=\"{children: 'children'}\" row-key=\"id\">\r\n            <el-table-column label=\"名称\" prop=\"name\"></el-table-column>\r\n            <el-table-column label=\"宿舍数量\" prop=\"roomNum\"></el-table-column>\r\n            <el-table-column label=\"人数\" prop=\"studentNum\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button v-has-permi=\"['manage:building:query']\"\r\n                           size=\"mini\" type=\"primary\" @click=\"showDialog(scope.row.id)\">详情\r\n                </el-button>\r\n                <template>\r\n                  <el-popconfirm title=\"确定删除吗？\" @confirm=\"del(scope.row.id)\">\r\n                    <el-button style=\"margin-left: 8px\" v-has-permi=\"['manage:building:delete']\"\r\n                               slot=\"reference\"\r\n                               size=\"mini\" type=\"danger\">删除\r\n                    </el-button>\r\n                  </el-popconfirm>\r\n                </template>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n        <div class=\"dialog\">\r\n          <el-dialog\r\n              :title=\"dialogTitle\"\r\n              :visible.sync=\"dialogVisible\"\r\n              width=\"45%\"\r\n              @closed=\"handleClose\"\r\n          >\r\n            <el-form ref=\"saveOrUpdateForm\" :rules=\"rules\" :model=\"building\" label-width=\"80px\">\r\n              <el-form-item label=\"上级\">\r\n                <tree-select\r\n                    v-model=\"building.parentId\"\r\n                    :options=\"list\"\r\n                    :normalizer=\"normalizer\"\r\n                    :show-count=\"true\"\r\n                    placeholder=\"选择上级\">\r\n                </tree-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"名称\" prop=\"name\">\r\n                <el-input v-model=\"building.name\" placeholder=\"输入名称\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n              <el-button type=\"danger\" @click=\"handleClose\">取 消</el-button>\r\n              <el-button type=\"primary\" v-has-permi=\"['manage:building:update']\" @click=\"saveOrUpdate\">保 存</el-button>\r\n            </span>\r\n          </el-dialog>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {list, query, del, saveOrUpdate} from \"@/api/building\";\r\nimport TreeSelect from '@riophae/vue-treeselect'\r\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\r\n\r\nexport default {\r\n  name: \"index\",\r\n  components:{TreeSelect},\r\n  data() {\r\n    return {\r\n      list:[],\r\n      building:{\r\n        id: undefined,\r\n        name: undefined\r\n      },\r\n      loading: undefined,\r\n      rules: {\r\n        name: {required: true, message: '名称不能为空', trigger: 'blur'}\r\n      },\r\n      defaultExpand: [],\r\n      dialogVisible:false,\r\n      dialogTitle: '添加'\r\n    }\r\n  },\r\n  methods: {\r\n    normalizer(node) {\r\n      if (node.children && !node.children.length) {\r\n        delete node.children;\r\n      }\r\n      return {\r\n        id: node.id,\r\n        label: node.name,\r\n        children: node.children\r\n      };\r\n    },\r\n    saveOrUpdate() {\r\n      const _this = this\r\n      this.$refs['saveOrUpdateForm'].validate((valid) => {\r\n        if (valid) {\r\n          saveOrUpdate(this.building).then(res => {\r\n            if (res.statusCode === 200) {\r\n              this.$message({\r\n                message: res.msg,\r\n                type: 'success'\r\n              });\r\n              _this.handleClose()\r\n              _this.listData()\r\n            }\r\n          })\r\n        } else {\r\n          this.$message({\r\n            message: '请正确填写参数',\r\n            type: 'error'\r\n          });\r\n          return false;\r\n        }\r\n      })\r\n    },\r\n    async showDialog(id) {\r\n      this.dialogTitle = '添加楼'\r\n      if (id) {\r\n        this.dialogTitle = '修改楼'\r\n        const {data} = await query(id)\r\n        if (data) {\r\n          this.building = data\r\n          this.dialogVisible = true\r\n        }\r\n      } else {\r\n        this.dialogVisible = true\r\n      }\r\n    },\r\n    handleClose() {\r\n      this.building = {\r\n        id: undefined,\r\n        name: undefined\r\n      }\r\n      this.$refs['saveOrUpdateForm'].resetFields()\r\n      this.dialogVisible = false\r\n    },\r\n    del(id) {\r\n      del(id).then(res => {\r\n        if (res.statusCode === 200) {\r\n          this.$message({\r\n            message: res.msg,\r\n            type: 'success'\r\n          });\r\n          this.listData()\r\n        }\r\n      })\r\n    },\r\n    async listData() {\r\n      this.loading = true\r\n      const {data} = await list()\r\n      this.list = data\r\n      this.loading = false\r\n      for (let i of this.list) {\r\n        this.defaultExpand.push(i.id.toString())\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.listData()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.table {\r\n  padding: 10px;\r\n}\r\n\r\n.router-container {\r\n  height: 100%;\r\n}\r\n</style>\r\n"]}]}