{"remainingRequest":"G:\\cache\\20230625_copy\\dms\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\cache\\20230625_copy\\dms\\src\\components\\Message\\index.vue?vue&type=template&id=a9dfc86c&scoped=true&","dependencies":[{"path":"G:\\cache\\20230625_copy\\dms\\src\\components\\Message\\index.vue","mtime":1644741256000},{"path":"G:\\cache\\20230625_copy\\dms\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\cache\\20230625_copy\\dms\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\cache\\20230625_copy\\dms\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"G:\\cache\\20230625_copy\\dms\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1655712169000},{"path":"G:\\cache\\20230625_copy\\dms\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\cache\\20230625_copy\\dms\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}